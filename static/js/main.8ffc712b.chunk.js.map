{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Navigation.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/pages/ErrorPage.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.module.css","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h5/Navigation.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior-plus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","alt","angle","content","name","text","time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Navigation","activeStyle","color","navigationOnTop","to","navigationOnLeft","links","Header","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","children","onDoubleClick","restSpanProps","editableSpan","divSpan","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","page404","SuperSelect","options","onChangeOption","mappedOptions","o","i","superSelect","SuperRadio","onChangeCallback","checked","superRadio","arr","HW7","Junior","Junior_plus","PATH","Routes","path","exact","render","HW5","Greeting","setNameCallback","addUser","totalUsers","inputClass","GreetingContainer","users","addUserCallback","setName","setError","length","alert","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","checkbox","HW4","setText","showAlert","setChecked","column","placeholder","App","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8ffc712b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1mZou\",\"avatar\":\"Message_avatar__33u6y\",\"content\":\"Message_content__3sj2X\",\"angle\":\"Message_angle__3dzTf\",\"text\":\"Message_text__VQULX\",\"name\":\"Message_name__VCeWG\",\"time\":\"Message_time__31Smr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeLink\":\"Navigation_activeLink__2JRm1\",\"navigationOnTop\":\"Navigation_navigationOnTop__3xoU3\",\"navigationOnLeft\":\"Navigation_navigationOnLeft__2YMnu\",\"links\":\"Navigation_links__3zCiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2cKdL\",\"errorInput\":\"SuperInputText_errorInput__2Qz37\",\"error\":\"SuperInputText_error__2q2-F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2k9YM\",\"red\":\"SuperButton_red__3_0Ts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__1EnNX\",\"divSpan\":\"SuperEditableSpan_divSpan__2g3OK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3xUhY\",\"spanClassName\":\"SuperCheckbox_spanClassName__1lRGi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__38SRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page404\":\"ErrorPage_page404__3-mxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSelect\":\"SuperSelect_superSelect__377hT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superRadio\":\"SuperRadio_superRadio__285DP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3TSFd\",\"error\":\"Greeting_error__14sdU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1P3Tg\",\"column\":\"HW4_column__1nEAF\"};","import React from 'react'\r\nimport s from \"./Message.module.css\"\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <img src={props.avatar} alt={'avatar'} className={s.avatar}/>\r\n\r\n            <div className={s.angle}/>\r\n\r\n            <div className={s.content}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.text}>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id) };// need to fix\r\n\r\n    return (\r\n        <div>\r\n            {props.affair.name}     {props.affair.priority}     {}\r\n\r\n            <SuperButton onClick={deleteCallback}>X</SuperButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => { props.setFilter(\"all\") }; // need to fix\r\n    const setHigh = () => { props.setFilter(\"high\") };\r\n    const setMiddle = () => { props.setFilter(\"middle\") };\r\n    const setLow = () => { props.setFilter(\"low\") };\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <SuperButton onClick={setAll}>All</SuperButton>\r\n            <SuperButton onClick={setHigh}>High</SuperButton>\r\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\r\n            <SuperButton onClick={setLow}>Low</SuperButton>\r\n\r\n            {/*<button onClick={setAll}>All</button>*/}\r\n            {/*<button onClick={setHigh}>High</button>*/}\r\n            {/*<button onClick={setMiddle}>Middle</button>*/}\r\n            {/*<button onClick={setLow}>Low</button>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = string; // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}; // need to fix any\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType) => { // need to fix any\r\n    if (filter === \"low\") return affairs.filter( a => a.priority === \"low\")\r\n    if (filter === \"middle\") return affairs.filter( a => a.priority === \"middle\")\r\n    if (filter === \"high\") return affairs.filter( a => a.priority === \"high\")\r\n    else return affairs; // need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number) => { // need to fix any\r\n    return affairs.filter( a => a._id !== _id ) ; // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React from \"react\";\r\nimport s from \"./Navigation.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navigation() {\r\n    const activeStyle = {color: \"#212529\"}\r\n\r\n    return (\r\n        <>\r\n            navigationOnTop\r\n            <div className={s.navigationOnTop}>\r\n                &equiv;\r\n                <ul>\r\n                    <li><NavLink to=\"/pre-junior\" activeStyle={activeStyle}>pre-junior</NavLink></li>\r\n                    <li><NavLink to=\"/junior\" activeStyle={activeStyle}>junior</NavLink></li>\r\n                    <li><NavLink to=\"/junior-plus\" activeStyle={activeStyle}>junior-plus</NavLink></li>\r\n                </ul>\r\n            </div>\r\n\r\n            navigationOnLeft\r\n            <div className={s.navigationOnLeft}>\r\n                &equiv;\r\n                <div className={s.links}>\r\n                    <NavLink to=\"/pre-junior\" activeStyle={activeStyle}>pre-junior</NavLink>\r\n                    <NavLink to=\"/junior\" activeStyle={activeStyle}>junior</NavLink>\r\n                    <NavLink to=\"/junior-plus\" activeStyle={activeStyle}>junior-plus</NavLink>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\nimport Navigation from \"./Navigation\";\n\nfunction Header() {\n    return (\n        <div>\n            <Navigation/>\n        </div>\n    );\n}\n\nexport default Header;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error ? `${s.errorInput} ${className}` : `${s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {DetailedHTMLProps, HTMLAttributes, InputHTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./SuperEditableSpan.module.css\"\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.editableSpan} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <div className={s.divSpan}><span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        &#9998; {children || restProps.value}\r\n                    </span></div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n        setValue(restoreState(\"editable-span-value\", \"default\"));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW6/>\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport s from \"./ErrorPage.module.css\"\n\nfunction Error404() {\n    return (\n        <div className={s.page404}>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\nimport s from \"./SuperSelect.module.css\"\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    // map options with key\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key !!!!!!GH-Pages BUG HER!!!!!!!\r\n        <option key={i} value={o}>{o}</option>\r\n    )) : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOptio\r\n        onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps} className={s.superSelect}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperRadio.module.css\"\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    value: any\r\n    options?: any[]\r\n    onChangeOption: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        value, options, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={i}>\r\n            <input\r\n                type={\"radio\"}\r\n                checked={o === value}\r\n                value={o}\r\n                // name, checked, value, onChange\r\n                onChange={onChangeCallback}\r\n                className={s.superRadio}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\r\n\r\nconst arr = [\"x\", \"y\", \"z\"];\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[0]);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={\"radio\"}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW7;\r\n","import React from \"react\";\r\nimport HW7 from \"../../h7/HW7\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            <HW7/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Junior;\r\n","import React from \"react\";\r\n\r\nfunction Junior_plus() {\r\n    return (\r\n        <div>\r\n            Junior_plus\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Junior_plus;\r\n","import React from \"react\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport {Switch} from \"react-router-dom\";\nimport {Route} from \"react-router-dom\";\nimport {Redirect} from \"react-router-dom\";\nimport Junior from \"./pages/Junior\";\nimport Junior_plus from \"./pages/Junior-plus\";\nimport Navigation from \"./Navigation\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR_PLUS: \"/junior-plus\",\n    JUNIOR: \"/junior\",\n    // add paths\n};\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} render={() => <Junior_plus/>}/>\n                // add routes\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n                {/*<Navigation/>*/}\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            homeworks 5\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    let inputClass = error ? s.error : \"\"; // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <SuperInputText value={name} onChange={setNameCallback} className={inputClass} error={error}/>\r\n            {/*{ error? <span>{error}</span> : \"\"}*/}\r\n            <SuperButton onClick={addUser}>add</SuperButton>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\"); // need to fix any\r\n    const [error, setError] = useState<string>(\"\"); // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value); // need to fix\r\n    };\r\n    const addUser = () => {\r\n        if (name) {\r\n            addUserCallback(name)\r\n            alert(`Hello ${name}!`) // need to fix\r\n            setError(\"\")\r\n        } else {\r\n            setError(\"set name!\")\r\n        }\r\n    };\r\n\r\n    let totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([\r\n            ...users,\r\n            { _id: v1(), name: name }\r\n        ]); // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (restProps.checked) {\r\n            onChangeChecked && onChangeChecked(false)\r\n        } else {\r\n            onChangeChecked && onChangeChecked(true)\r\n        }\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const placeholder = \"enter something\"\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    placeholder={placeholder}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChangeChecked={setChecked}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React, {Component} from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1';\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW7 from \"../../../p2-homeworks/h7/HW7\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className={s.App}>\r\n                <div>react homeworks:</div>\r\n                <HW1/>\r\n                <HW2/>\r\n                <HW3/>\r\n                <HW4/>\r\n                <HW5/>\r\n                {/*<HW7/>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}